apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: microservices-alerts
  namespace: monitoring
  labels:
    release: monitoring
spec:
  groups:
  - name: microservices
    rules:
    - alert: HighCPUUsage
      expr: sum(rate(container_cpu_usage_seconds_total{namespace="app"}[5m])) by (pod) > 0.8
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: High CPU usage detected
        description: "Pod {{ $labels.pod }} has high CPU usage ({{ $value }} cores)"

    - alert: HighMemoryUsage
      expr: sum(container_memory_usage_bytes{namespace="app"}) by (pod) / sum(container_spec_memory_limit_bytes{namespace="app"}) by (pod) > 0.8
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: High memory usage detected
        description: "Pod {{ $labels.pod }} is using {{ $value | humanizePercentage }} of its memory limit"

    - alert: PodCrashLooping
      expr: kube_pod_container_status_restarts_total{namespace="app"} > 5
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: Pod is crash looping
        description: "Pod {{ $labels.pod }} has restarted {{ $value }} times"

    - alert: HighErrorRate
      expr: sum(rate(http_requests_total{status=~"5.."}[5m])) by (service) / sum(rate(http_requests_total[5m])) by (service) > 0.05
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: High error rate detected
        description: "Service {{ $labels.service }} has error rate of {{ $value | humanizePercentage }}"

    - alert: ServiceDown
      expr: up{namespace="app"} == 0
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: Service is down
        description: "Service {{ $labels.service }} in namespace {{ $labels.namespace }} is down" 